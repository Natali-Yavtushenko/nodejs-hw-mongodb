import { SORT_ORDER } from '../constants/index.js';

const parseSortOrder = (sortOrder) => {
  const isKnownOrder = [SORT_ORDER.ASC, SORT_ORDER.DESC].includes(sortOrder);
  if (isKnownOrder) return sortOrder;
  return SORT_ORDER.ASC;
};

const parseSortBy = (sortBy) => {
  if (!sortBy) {
    console.warn("‚ö†Ô∏è –û—Ç—Ä–∏–º–∞–Ω–æ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π sortBy, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é '_id'");
    return '_id';
  }
  const keysOfContact = [
    'id',
    'name',
    'phoneNumber',
    'email',
    'contactType',
    'createdAt',
    'updatedAt',
  ];

  if (keysOfContact.includes(sortBy)) {
    return sortBy;
  }

  console.warn(`‚ö†Ô∏è –ù–µ–≤—ñ–¥–æ–º–∏–π sortBy: ${sortBy}, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é '_id'`);
  return '_id';
};

export const parseSortParams = (query) => {
  console.log('üîç –í—Ö—ñ–¥–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏:', query); // –î–æ–¥–∞–Ω–æ –¥–ª—è –¥–µ–±–∞–≥—É
  const { sortOrder, sortBy } = query;

  const parsedSortOrder = parseSortOrder(sortOrder);
  const parsedSortBy = parseSortBy(sortBy);
  console.log('‚úÖ –û–±—Ä–æ–±–ª–µ–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è:', {
    sortBy,
    parsedSortBy,
    parsedSortOrder,
  });
  return {
    sortOrder: parsedSortOrder,
    sortBy: parsedSortBy,
  };
};
